--- node_modules/@hashgraph/sdk/lib/crypto/Pbkdf2.js
+++ node_modules/@hashgraph/sdk/lib/crypto/Pbkdf2.js.new
@@ -18,7 +18,25 @@
 const utf8 = require("@stablelib/utf8");
 const crypto = require("crypto");
 const util_1 = require("util");
-exports.pbkdf2 = util_1.promisify(crypto.pbkdf2);
+
+/////// mcu: begin-paste
+const promisify = (fn) => {
+   return (...args) => {
+     return new Promise((resolve, reject) => {
+       function customCallback(err, ...results) {
+         if (err) {
+           return reject(err)
+         }
+         return resolve(results.length === 1 ? results[0] : results) 
+        }
+        args.push(customCallback)
+        fn.call(this, ...args)
+      })
+   }
+};
+/////// mcu: end-paste
+
+exports.pbkdf2 = promisify(crypto.pbkdf2);
 class Pbkdf2 {
     static deriveKey(algorithm, password, salt, iterations, length) {
         return __awaiter(this, void 0, void 0, function* () {
